Alright, let me start by saying that when I say I'm an indie dev, I mean I'm 15 and I've been studying game development for 3 years on my own and I've been working on little projects for a while.
I've got an issue though - I suck at art. I can't animate very well, I am horrible at modeling and graphic design. This is a huge problem when making environments, characters, UI, etc. Since I'm 15, I've not been able to find anyone else around my age with the amount of dedication I have to work with. I'm 100% on my own with my projects.
As for the level design issue, I'm not really sure how to design a level (or a game for that matter, advice would be appreciated for that as well). Almost every decision I make is completely arbitrary while designing a game/level. I'm not really sure how to plan a level or game out ahead of time (I would do it through concept art, but again... I suck at art), so I just make things up as I go. The level design process for a platformer game for me, for instance, might be something like:
"Okay, so this is a platformer game... so I need platforms!" I throw random platforms into the map
"Okay.. now I've got a mess of platforms.. uhm... I'll just add uh, some random items to make it look nicer." I add some floating coins into the map floating above every other platform
"This is really a mess, uhh... you know what, it's good enough." I add a portal at the end of the level that teleports you to the next level
"Okay, now for level two... uhm, more platforms, I guess. It's a platformer after all!" Add more random platforms
"Okay, now I need to mix it up a bit... so now I'll add spinning platforms!" I add spinning platforms at random intervals, then another portal at the end
"OKAY, level three! First level had regular platforms, second had spinning platforms.. I guess this one will have... platforms that grow and shrink? Good enough!"
You get the idea. Long story short, I have no idea what I'm doing.
This goes for game design itself as well. I don't know how to plan a game, really. Here's the kind of idea I start with (this is an actual idea for a project that I started to work on, more on that later): You play as a blogger exploring Aokigahara Forest (Suicide Forest) in Japan. You have a camera that you can take pictures with. You enter the forest to take pictures of what you find and to document your trip, but you soon find there's a monster in the forest, and the deaths aren't just suicides - they're attacks. Decent concept as far as my concepts go, but that's all I've got. I just gave every detail of the idea that I've come up with. So I started working on the project, randomly started putting together a forest, programmed a working in-game camera, set up a monster that walks around randomly, and then it hit me... I have no clue what I'm doing again. I've got some trees placed around arbitrarily for a forest map, an unplanned AI that literally just roams around in circles, and a camera. Now I'm getting stressed out because I'm not sure where to go from here. My idea was so vague to begin with - I had no idea how the level was supposed to be laid out, how the monster would work, the game mechanics (there's the camera, yes, and you can take pictures with it... but what good does that do? What's the point? What's the player's motivation to do that? Do they really NEED a camera? Why?), how the game would play out and what the actual gameplay would be like, etc. I hope that, to some extent or another, makes sense. Basically, I get a very vague idea (IE: I want a forest that has a monster and you can take pictures), and then I try making a full game out of it. I get lost and discouraged, and I have no idea how to build off of it.
I was hoping to find someone around my age from school that has strengths where my weaknesses are, to work on a game together and try to make something, but unfortunately I've found that not too many 15-year-olds are intersted in sitting aside several hours every day to work on making a video game from scratch, and I guess I'm going to have to live with that. Any advice would be really appreciated, thanks!
tl;dr I don't know how to plan a game or level after I've got a very basic idea (IE: I want to make a horror game where you play in a forest with a monster, and you use a camera to take pictures of stuff. This is the kind of idea I start with and then immediately start trying to make a game, and of course the concept is too bare-bones and ambiguous. I don't know how to build off of it though to expand that idea into an entire game), all the decisions I make in game/level design are arbitrary and this leads to very boring/repetitive "gameplay" (of which there is very little - mainly just randomly placed objects and some broken game mechanic prototypes), and I suck at art (modeling, graphic design, UI design, animations, concept art, etc.), and hiring someone/working with another person is out of the question. How can I make a game on my own with all these struggles?
137 commentsshare
all 137 comments
sorted by: best
[–]Siniroth 219 points 1 day ago 
So you have the three levels of a platform game? End it there. Finishing the third level is the end of the game. Done. You don't need to publish the game or put it on sale, just bench it and keep it as a 'my first game' kind of thing. A short little blurb to point to as complete, even if it's not long or very complicated. You aren't going to make Final Fantasy as your first completed game
Use it to learn what works and what doesn't for games (might be harder with such a short game, but it doesn't need to be a great revelation. Even something like 'quirky jumps might not sit well with players' or 'a secondary path might make people feel clever'), and what works and what doesn't for development/coding (doing this feels like a hack not something useful, is there a better way to handle rotating platforms) or something along those lines.
permalinkembed
[–]bigdavedev 60 points 22 hours ago 
This is solid advice. Iteration/repetition and reflection is key to getting better at anything. Do what is advised here and call it finished now and start the reflection process.
permalinkembedparent
[–]survivalist_games@SurvivalistGame 22 points 21 hours ago 
Plus, pulling that project out in a year or 2 to look at your progress can be a great feeling. The next game you make, focus on what you learned from this one and improve something. It's like keeping your first sketchbook or taking a mirror selfie before starting a workout regimen. It'll keep you motivated and remind you of what you accomplished.
permalinkembedparent
[–]thatsnotmybike 5 points 11 hours ago 
I love/hate that feeling of looking back on an old snippet of code, code that I remember feeling really proud of at the time which solved some critical issue, and thinking:
"Oh what fucking monkey did this nonsense?! Oh, hah, shit. That was me."
Even when you're at the top of your game, you're never as good as you're going to be if you keep practicing.
permalinkembedparent
[–]settrbrg 10 points 19 hours ago 
I saw this talk once, cant remember from where, and this guy talked about it is only the first ~60% of the create process where you learn a lot! The last ~40% is just you tweaking and finishing off some details.
This may not be 100% correct, I find there is a solid point somewhere in there and that would be; If you want to become good at something, focus on quantity before quality. I would add that sometimes focusing on quality is Good aswell! :)
When you find your "Final Fantasy", then is time to focus on making it really quality and try to get it out to people.
permalinkembedparent
[–]WhatIsPaint 3 points 13 hours ago 
Was it the Ted talk by the blender guy?
permalinkembedparent
[–]settrbrg 2 points 12 hours ago 
Yes that could be it!
permalinkembedparent
[–]blarghh_ 2 points 10 hours ago 
Yep that's it, solid advice
permalinkembedparent
[–]twelvedogs 4 points 16 hours ago 
to build on this, also get people you know to play what you've done and make suggestions, feedback is important and helps with learning skills you don't have.
you may eventually be in a position where someone else can bring those skills but knowledge in other areas is never a bad thing.
i'm also thinking that people wanting to design games are often easy to find, hell i've had multiple ideas over time i would never have the mental fortitude to implement myself, reach out on dev forums, use free art and just get it done, if you build a working game you're already 99% ahead of most people who try it and learning a whole bunch of skills that will eventually get you to where you want to be if you stick with it.
don't aim to conquer the world, aim to get something good enough finished.
permalinkembedparent
[–]AXLplosion 3 points 18 hours ago 
Learned this the hard way. I'm 15 as well, currently making just a simple platformer with my friend. We have started countless of projects, one that was an RPG. We had started designing the map, the lore, even special abilites for the player and much more.
Currently it's collecting dust in our hard drives, but we hope to revisit the project in a few years, in the hopes that we have enough experience to finish it.
permalinkembedparent
[–]tkdHayk 0 points 12 hours ago 
incorrect. The more you publish the more you learn.youll learn more from publishing than just making
permalinkembedparent
[–]MtaxSo how do I do this thing? 5 points 12 hours ago 
Not "publish" per se. One just need to get a feedback. But it doesn't need to be a feedback from public or from people who'll think it's finished or doesn't need more work. It's good to have friends or sort of closed community that'll give the helpful feedback. This will help one understand what people expect and what makes their game fun for others.
permalinkembedparent
[–]Advon 45 points 22 hours ago 
I think most of the other posters covered your more meta problems, so I'm going to try my hand at giving out some game design tips.
As far as level design goes, one way to start is to split your levels down to, let's call them "screens". Screens have no set size, but in general it should be small enough that all relevant information to beating the obstacle should be visible within a single screen. That isn't a hard and fast rule though. In each screen, you need three things: A goal, at least one obstacle, and a method of beating the obstacle. In a platformer, the goal is almost always "Go Right".
What sorts of obstacles does a platformer have? Environmental hazards and enemies.
An environmental hazard is something that cannot be stopped, only avoided. Gaps, stationary spikes, crushers are environmental hazards.
Enemies are obstacles that can be dismantled. In Mario, the earliest example is the goomba, which is deadly if it touches you, but either jumping on it, or letting it fall into a gap, destroys it. Note: There can be some crossover: A goomba in an area too small to allow you to jump on it, and no pits, would be an environmental hazard simply because of the way it is interacting with the other obstacles, while those coin block gaps in Mario (the ones where you can turn the coins into blocks to fill the gap), or a crusher trap you can turn off by finding the switch, would be "enemies" by this definition.
There may be more, but those definitions are abstract enough that they should cover quite a bit.
Finally, the method of beating the obstacle. Whenever you design a "screen", you must plot out at least one path to victory for the player, and the biggest part of that is knowing the limitations of your character. How far can you jump? What arcs can a jump follow? What is the response time between button pressing and jumping? Is there a delay? How aware you need to be of these depends on how hard you intend to make the game of course, but always make sure an obstacle is at the very least possible.
Another important level design concept is training with your design. Your first level, or the early part of every level with a new mechanic, should include something of a warm-up.
Take a look at Super Mario Bros. 1-1. The first "screen" consists of a single goomba and some airborne blocks. This screen quickly teaches a new player about enemies, dying, and when the player tries to jump, potentially block treasures and what happens when you jump on an enemy. The next screen teaches gaps in a safe way (by encouraging the player to jump on the pipes over the goombas), and the last pipe jump shows the player how far Mario can jump horizontally. Then it tests you with an actual gap. Then it teaches about falling enemies and multiple paths, then...
I could go on, but if you look I'm sure you can find other lessons 1-1 teaches the player, and when a screen doesn't teach, it reinforces knowledge throughout the level, while slowly upping the difficulty and amount of obstacles in a screen. As the game progresses, obstacles start to occur more often, new obstacles become more challenging, though are introduced in the same way goombas were, slowly introduced into more complex screens over time. Another method is instead of making a screen more complex, reduce the distance between one screen and another, which makes for a fast-paced, difficult, but potentially satisfying portion of a level.
As for how to apply this? When designing a level, ask yourself, "Has the player seen X thing I want to introduce?" and then begin making screens to introduce it "(Here, simple floating platform above a basic enemy! Now put it over a gap! Brief spike trap interlude to break things up so the player doesn't get bored repeating this over and over again! Now two floating platforms, but there's an enemy on the second one!" etc. ).
And that should at least get you started. Keep in mind, I'm in no way a platformer guru. You'll have to figure out the right balance of these things simply by experimenting. (And unless you need to ship the game ASAP, you'd better experiment when you can!) But honestly, just practicing making levels with a set plan in mind will help a great deal. But that "Screen" thing? That's not something limited to only platformers. You can apply something similar to any genre of game. (Or you may decide that's a crappy way to make games, but hopefully it will lead you into thinking up a better way, which is a victory for me in the end!)
For further reading/learning, if don't mind branching away a bit from platformers, go explore table top RPG forums or reddits, and look up tips on designing challenges as a DM. Game Design, on an abstract level, is fairly universal, and table-top rpgs have the greatest variance on "ways the players try to solve a problem" spectrum.
tl:dr Solve your problems by breaking it down into smaller problems and dissect Mario Levels for succulent meat valuable lessons.
permalinkembed
[–]AboboMutombo 2 points 10 hours ago 
This is a really great comment. Thanks for putting forth the effort to type all of this out!
permalinkembedparent
[–]maelfyn 35 points 1 day ago* 
I think you are dreaming too big for a first game. Start with something much simpler. I recommend making a game similar to a popular game that is easy to mimic, like a card/dice game or even a board game. Perhaps a classic video game from the 8- or 16-bit era. You haven't really given us any detail in terms of how you plan to develop it or if it's 2D or 3D. What platform? Browser game? Unity? Or what?
I am in a similar position and I'll tell you what I did. I was a tech writer that became very interested in web development. I was particularly interested in making HTML5 web games. So, five years ago, I set up a website and just started to make a single-player browser RPG called Nevergrind. I closely copied EverQuest, a classic game from 1999 that I loved a lot. I didn't think I was making EverQuest, but I did know that I was making something that I had a strong emotional bond with. That's actually pretty important because it keeps you consistent and motivated to continue working on it. I continued working on it for more than 3 years, somehow lucked out and managed a successful, modest Kickstarter campaign, and had modest success for a first game. Especially considering that I had basically no idea what I was doing when I started.
It didn't make a lot of money, but it did help launch my career in web development/software engineering. Now I make a lot more money in my career, and I use my game development as a way to make me a more useful person at my real job. It's like a hobby to me.
I decided that I wanted to make a multiplayer game, so I decided to make a free Risk-like strategy game called Firmament Wars. Again, this game did not make me rich—in fact, it lost money—but I learned a lot about websockets, Ratchet, ZMQ, messaging technology, multiplayer asynchronous gaming, and networking.
Personally I would warn against chasing a game development technology dream. It is a lottery ticket mentality that will, in all likelihood, leave you full of despair. Develop games for the pure joy of creating something that you love, and use it to get your foot in the door at a real job working with technology you like.
One last note regarding art assets... to be honest you don't need a giant budget to make games. You can find free art online in a lot of places... I'll leave that between you and google. But games can be created using programmer art or other placeholders.
permalinkembed
[–]rapt_dog 8 points 18 hours ago 
Develop games for the pure joy of creating something that you love, and use it to get your foot in the door at a real job working with technology you like.
As much as I agree with the sentiment of this ('don't expect to get a job in the AAA industry' and afaik even if you do game programming is not a very good job, and 'don't expect to be a successful indie dev' which is even less attainable), game dev is not any less of a real job than any other job.
permalinkembedparent
[–]maelfyn 2 points 22 hours ago 
I say real job in the sense that it is more realistic and attainable. Of course gamedev is a real job, too. I didn't say it was not.
permalinkembedparent
[–]spiralings 1 point 19 hours ago 
It is a lottery ticket mentality that will, in all likelihood, leave you full of despair.
this is correct. we all read about stardew and the guy who did it and get the feeling "I could do that!"
create for yourself first
permalinkembedparent
[–]Ozwaldo 85 points 1 day ago 
How can I make games on my own?
With a lot of hard work.
permalinkembed
[–]52percent_Like_it 26 points 1 day ago 
Yeah, that's basically how it goes. Everyone is bad when they start, so they practice and get better. Simple as that.
permalinkembedparent
[–]Japanletsplay 18 points 19 hours ago 
/r/KoreanAdvice
permalinkembedparent
[–]speedtouch@speedtouche 21 points 1 day ago 
I suck at art. I can't animate very well, I am horrible at modeling and graphic design.
You have two options:
Become good at art. It's a skill like any other, it takes many hours of practice to get good at it. On the brightside, your current game creating experience can help build off that - knowing which image formats to use, knowing how to put assets into your game, knowing how to touch them up, etc - it all helps accomplish the goal of finishing a game. As a bonus, you can certainly find people interested in art, right? You can make art with them, learn from them, and hey, maybe it will help with your social anxiety. There's no pressure to talk since you're focusing on drawing/painting, and you can still have casual conversation.
Use free art/animations. You'll forever be associated with other games that use the same assets, but it's something you can work off of at least.
As for the level design issue, I'm not really sure how to design a level (or a game for that matter, advice would be appreciated for that as well).
Watch some talks about design, there's thousands of hours of resources to help you here.
As something to start off with, I recommend checking out Sequelitis, it's easy to consume, and only a bit more than an hour for all of the videos. The video I linked is particularly great since he talks about how Mega Man teaches the player through level design. The part about Mega Man X's first level is particularly good.
Extra Credits is good as well, the video on super mario bros 1-1 can help with your level design ideas too: https://www.youtube.com/watch?v=ZH2wGpEZVgE
Basically, I get a very vague idea (IE: I want a forest that has a monster and you can take pictures), and then I try making a full game out of it. I get lost and discouraged, and I have no idea how to build off of it.
You don't need a big design document outlining every mechanic of your game, but it can help. Since you find you're getting lost/discouraged, try focusing on creating small prototype games. Think small iteration cycles where you give yourself a constraint and make a prototype around that constraint.
permalinkembed
[–]klianc09 11 points 20 hours ago 
You have two options:
Don't forget option number 3: choosing a simpler artstyle in the first place. It's far easier to make a game about abstract shapes look good, than it is to try and achieve photorealism.
permalinkembedparent
[–]SpectralShade 11 points 20 hours ago 
Or option 4: pay someone to do the art for you. OP might not have the money to spare, though, nor the experience to justify the purchase.
permalinkembedparent
[–]heavyfishheavy@onihunters 6 points 19 hours ago 
That's an option, but for a guy who is 15, instead of recommending that, I surely would recommend him just to learn art, if he starts at that age, and dedicates enough time, 5 years will be a pro :)
permalinkembedparent
[–]Kiroen 0 points 19 hours ago 
Why do we think in hiring someone sooner than we think in coworking with someone?
permalinkembedparent
[–]neighh 1 point 14 hours ago 
Because OP has already thought in that.
permalinkembedparent
[+]karn1948 comment score below threshold  (12 children)
[–]ariadesu 23 points 1 day ago 
If you're 15, your time should be free, so maybe it's a good idea to watch some tutorials and GDC talks.
There are certainly games you can make without good art. If you want art, after having made something worthwhile, you can pitch rev share to an artist or a fellow student who could fancy becoming an artist.
If you can't make good progression, make a single screen game, or a game where the user generates the level.
If you don't have any good concepts, you can just make another thread and ask for suggestions. I'm sure you'll get a hundred in an hour. Just pick your favourite.
permalinkembed
[–]MeltdownInteractive| SuperTrucks Offroad 10 points 23 hours ago 
When you suck at art...
When you suck at animation...
When you suck at modeling..
When you suck at graphic design...
There's only one thing left to do....
Become a programmer!
I sucked at all those things, and became a programmer, and I'm very happy today. I feel like I have more control of my project. I outsource all my artwork, and think its a good spot to be in.
permalinkembed
[–]Dani_SF@studiofawn 24 points 23 hours ago 
Learn to do stuff....you are 15....
permalinkembed
[–]IonTichy 2 points 17 hours ago 
I think this is the best advice here...
permalinkembedparent
[–]ShmolidShmake 1 point 12 hours ago 
Your advice is wrong. Should be... you are 15... learn to do stuff...
permalinkembedparent
[–]apekke 1 point 10 hours ago 
Lol srsly, dude has all the time in the world I bet people on here would kill for.
permalinkembedparent
[–]theredfront 4 points 1 day ago 
I've started off knowing very little about game design, beyond trying to mess around with some mod tools and quite a lot of experience playing games under my belt.
I taught myself basic C#, I followed unity tutorials on development series. I followed photoshop and illustrator tutorials on "how to draw x". I have followed tutorials on sound design with audacity, how to use spriter and through a lot of trial and error I am close to completing my first fully fledged game.
On top of all this you need to learn web design, marketing and general business skills. You'll need to do a lot of research and dedicate considerable time.
It's tough work, you need to be dedicated and find a passion for your project.
You're have a good start though, my suggestion is to build upon your vision for your game. Think on what you would like to see added to it. Do you want your game to end up being a survival style game where you're constantly stalked by this monster? Or do you want to make a game kind of like pokemon snap where you catalogue the monster types to make the world aware. Your theme could be finding monsters in different special area's (trying to not rediscover the same ones) and then finding how to confuse/lose the monsters whilst they chase you after you have photographed them. Maybe some monsters respond to different stimuli (noise, vision etc) where others respond to other (heat, cold etc).
Set a high level vision, define it and then make a to do list or a set of actionable items.
permalinkembed
[–]srekel@srekel 4 points 22 hours ago 
"This is really a mess, uhh... you know what, it's good enough."
That's your #1 problem. Your goal at this point should be to learn how to design. To do that, you need to test different things, iterate on your designs, see what works, see what doesn't. Maybe get an idea, change your game mechanics, restart the level design, etc, etc.
permalinkembed
[–]grouse_jst 4 points 23 hours ago 
"Constraints breeds creativity." - some famous person, probably.
Work to your strengths. Many games have been made by people in your situation and found a way to work their constraints into the design. Minecraft, Thomas was Alone, others that are slipping my mind right now.
If you don't know how to create beautiful art, make basic shapes. Maybe learn how to shade them in some unique way, which is purely maths and programming. If you don't know how to make "good" music, focus on minimalist sound effects and make a silent game.
The other option is to find public domain assets, or pay someone to make assets for you. Or to learn.
permalinkembed
[–]I_LOVE_CROCS 3 points 22 hours ago* 
I assume you play games. Try to play games with your eyes truly open, and have a student approach to them. Why does it work? What doesnt work? To learn about level design, play games like Dark Souls, which are praised for its level design etc. For art, i think learning to draw concept art by hand is a great start. Do it for minimum one hour everyday. Good luck! Im 31 and im studying game design. I wish i took that leap when i was 15!
Edit: You would do well to study a bit of psychology aswell, and understand what mechanisms that are at work when a player plays games.
permalinkembed
[–]LinkReincarnat3 3 points 23 hours ago 
So the mario games use some cool guidelines you could use. They like to introduce a mechanic in a Safe area. Then they ramp up the diffculty by removing the safety net. Finally they make you explore the limits of the mechanic by using harder challanges.
Most games also try to get harder the further you go. So you could start there.
permalinkembed
[–]ninesquirrels 3 points 23 hours ago 
May I say the obvious? You're 15. Relax. You're not supposed to be good at any of this stuff yet. You get good through experience. Experience comes through just making stuff that sucks, looking at it, seeing it sucks, and then making it again.
if you were 15, and a wizard at game design, art, and code - I'd say you were either lying or magical. So... just keep at your craft. Finish some small projects, and move on. You'll look back on them and hate them, just like everyone else looks at their first few projects. But then you'll get better.
As for the "what do I do about this right now" - there is the internet. You wanna know how to design better platform levels? There are tutorials. Play throughs. Lets plays. More than any one human could consume in a lifetime. Go play some games and deconstruct them - note down the parts that were fun, and ask WHY were they fun. then copy them. Then alter them. Can you think of ways to copy something you enjoyed, but change it so that you have more fun? If so, congrats. You're a game designer.
permalinkembed
[–]ThalmorInquisitorWHY DOES YOUR GRAVITY NOT WORK? AAAGH! 3 points 19 hours ago 
Ok I'm not sure how best to get people to help you, but I like your horror game idea, so let's expand on that.
The Creature is almost invisible to human eyes, but breathes heavily and lets out a guttural howl before striking. Sort of like made of mist unril it's in spitting distance.
However, taking a picture makes it flee in pain for a while, the flash startling it: bright lights cause it immense pain, as it forces it to be more corporeal.
Your character is alone in a old abandoned town for some reason (a lot of options here), and ends up encountering the Creature by accident.
As they travel to... The lighthouse I guess... They get clues as to what happens, and in the pause menu there's a journal formibg with each clue.
The game ends when you bathe the creature in unescapeable beams of light, or at least survive until dawn maybe?
Would end up as a hybrid of Until Dawn, Alien Isolation, and Life Is Strange.
permalinkembed
[–]twistedsteel93x 3 points 18 hours ago 
First, watch this short video about taste. My design prof would always say, "The best way to make a good design is to make lots of designs." That applies to pretty much anything you make or create.
Second, the internet is full of amazing learning resources and assets. Don't get overwhelmed. Whether it's a design course or a graphics library, just pick something and commit to it. Once your through that class or project, pick the next thing and commit to that.
Next, learn to plan your time. Check out bullet journaling.
Finally, always remember that having a team makes a world of difference. You don't have to do it all yourself. In fact, as cool as that sounds, it's actually quite miserable and your better off finding others who like to do the parts of the project that you don't care for or aren't quite as skilled with. Having people to bounce ideas off of makes the end product way better and speeds up progress. Find T-shaped people who compliment your own skills and learn to find enjoyment working with a team.
Best of luck! (Luck is just where preparation and opportunity intersect)
permalinkembed
[–]Rbotguy 1 point 17 hours ago 
Bump for the Ira Glass video. It changed the way I look at creative work.
permalinkembedparent
[–]venum4k:| 2 points 1 day ago 
I'm kinda curious as to what you're using to make the game in terms of engines. How much of a working prototype do you have? Is what you have fun to play? What similar games exist, how and why are they fun? At this stage, level layout wouldn't be too important. Focus on core gameplay mechanics. What happens when you take pictures of things? Does the monster try to attack you when you do? Just try to ask yourself "why does the player want to do this?", "Is this fun?" and "How can I make it fun?". Sorry if this response is a bit messy
permalinkembed
[–]TheMeadow 2 points 23 hours ago 
Honestly, start small.
Follow a clone of a game, with free assets, and make that. Now, change it a little... and a little more and a little more.
Start with paceman clone, now reverse it, play as the ghosts, ad some multiplayer, change the ghosts to something else... maybe your own design? Keep going.
This will give you basics and understanding, at your age, keep playing and tweaking. Then ad what you learn to your horror game. Research and work, you'll get there.
permalinkembed
[–]dunenkoff@dunenkoff 2 points 22 hours ago 
Dude, learn. I'm 38, I've been doing gamedev for ages and I still suck at most things compared to the big boys in big companies.
permalinkembed
[–]CerebusGortok 3 points 21 hours ago 
Big boys in big companies tend to be highly specialized. So... even they suck at most things.
permalinkembedparent
[–]oristomp 2 points 19 hours ago* 
Practice and learn. Don't expect to be able to make a good game without having put a lot of time into learning. When you're a solo dev, you have to learn everything yourself, and this takes a lot of time and dedication (unless you outsource, but that's not really solo).
Start simple, 2D games are generally easier than 3D. Gamemaker is a great 2D engine to work with and has been the engine of choice for a lot of great iconic indie games. When it comes to anything that requires creativity such as art and music, find artists who's work influences you and try to mimic their style - don't just copy it though, you're aim should be to incorporate it into your own unique style.
Understand that these things take a lot of time, it may take 5 years just to be proficient at pixel art. Try to balance your available time to explore all the different areas that are required to create your game. A lot of the time you get amateurs who want instant results - they want to make a game, a game that in their head sounds amazing, but then they find that making games is difficult and takes a lot of time and end up giving up on it. You have to understand that a lot of effort is required to develop a game on your own, but if you're willing to put that effort in, it can pay off greatly for you, even if you don't ever get round to completing a game, over time you will have built up a skillset in a variety of areas and have a strong portfolio which you can use to enter the industry and be part of a team.
permalinkembed
[–]JaytossGaming 2 points 18 hours ago 
Simplicity. Minimalism.
permalinkembed
[–]akjoltoy 1 point 16 hours ago 
Make lots of games and see what works. You'll get better at all aspects. Some of them take more iterations than others.
None and I mean absolutely none of the great game designers and artists started off any better than you are now.
permalinkembed
[–]Kiroen 2 points 16 hours ago 
Game Design and Level Design are best learnt by playing games while analyzing them critically.
This Youtube Channel might be a good first step on that terrain.
permalinkembed
[–]Snarkstopus 1 point 1 day ago 
Just like it takes a lot of time to learn how to program, it takes a lot of time to learn how to make good art. You can either try to get good at art, or minimize the amount of art you need for your game so you don't have to produce as much or get someone else to do it for you.
permalinkembed
[–]ManaSpoon@ForgedOfBlood 1 point 1 day ago 
Start small and go bigger and bigger.
I started messing around with just basic CYOA style stories on Twine before making them increasingly more and more complex.
permalinkembed
[–]dwapook 1 point 23 hours ago 
You have the setup, but what's the goal? What's the player trying to accomplish?
permalinkembed
[–]_malicjusz_ 1 point 23 hours ago 
Learn to design games. Graphics, animations, 3d models, all that you can do without. You need to be able to program and design tho.
Watch the extra credits youtube channel, and game makers toolkit, lots of design goodies there. Read "game design workshop, a playcentric approach..." by Tracy Fullerton, it wil give you a better idea of what being a designer is. Start playing board games, especially the so called euro board games, as opposed to so called amerithrash board games. It will give you insight into how systems and mechanics translate into experiences. You might also want to play some pen and paper rpg.
At your age, you have lots of time, so use it well. Keep projects small, but document everything, so that you build up a portfolio for future job interviews.
Good luck!
permalinkembed
[–]ComboPriest 1 point 22 hours ago 
Ask questions. This is the best way to go from a barebones concept to something close to a game. There are a few different kinds of questions you can ask.
Detail questions. These help you flesh out what you already have. Things like "What is the player's goal?" "Can the player do (something)?" "What obstacles are there?" "How does the player conquer these obstacles?". If you keep asking and answering those questions, that leads to a much more solid, concrete idea of what your game will be. Even when you get answers, ask questions about those answers. Keeping asking questions, and answering them until you turned your ambigous idea into a more solid one.
What if questions. What if questions are how you add new stuff to the game. "What if the player had a Jetpack?" "What if this platform disappeared after you stand on it for a short bit?" Just think of any random What If, serious or not. Feel free to take inspiration from other games as well. "What if I took this mechanic from this game and put it into my game?" "How can I make it different?"
Player questions. Another very important thing is to consider how your player reacts and thinks about everything. A lot of level design is about predicting what players will think and do, and then choosing what to do based on that. Example: I have this corridor that a player can't see the end of. They will most likely be curious and go down it. So I'll put a trap at the end of the corridor to trick them.
And then try things out. Take the answers to your questions, put it into your game and try it out. Play it for a bit. Think about both what you're enjoying and not enjoying. And then all those questions that we just asked? Ask them again. Iterate. Remove things that didn't work in the way you expected, put more focus on things you liked.
Ask yourself questions. Take your answers, and put them into the game. Try it out. Don't like how it turned out? Go back to your original questions and try a different answer. Liking how that played? Ask more questions.
permalinkembed
[–]EriktheFunk 1 point 22 hours ago 
Play board games, make video game versions of them. Majority of art, design, and 'levels' already done.
permalinkembed
[–]kudamalam 1 point 22 hours ago 
Don't worry, everyone suck. But some of them work hard, practice really often, fail really often, and success really hard.
permalinkembed
[–]Brauny74 1 point 22 hours ago 
You are 15. You have tons of time to learn how to do stuff, so sit and learn. When you're 27, and your brain is starting to get slow, you will love yourself a lot for actually learning, while you could. Also, before you open editor and start to make game, write a damn design document. Then sit and think how you can make suck less. Rewrite it to suck less. Repeat, until it's okay enough (don't have to make it perfect, perfection is impossible, so okay enough is enough). With design document it will be much easier to actually follow through your ideas, because you know what you must do now, not just some vague ideas.
permalinkembed
[–]TobiNano 1 point 23 hours ago* 
You can start by using pixel art as a medium, there are some simple styles in pixel art that brings out the design and mechanics of the game.
Plenty of indie games that focus on gameplay uses pixel art, eg Titan souls and path to the sky.
Or you can team up with an artist and get a team going! There are many games with 2-man teams which are great, with 1 programmer and 1 artist.
EDIT: Make a bunch of prototypes and test them with your friends and others, see which mechanics are fun and flesh them out.
permalinkembed
[–]GoobyExe@_GoobyExe 1 point 23 hours ago 
Simple. Learn and practice. If you're serious about game development, then there's no rush. You're only 15 after all. Just keep at it
permalinkembed
[–]Zip2kx 1 point 22 hours ago 
Either you keep doing it and learn as you go or you quit and move on. There's no secret sauce to get better. You read and consume a lot of information and try over and over and over and over until you found the thing you are good at.
permalinkembed
[–]Cixxar 1 point 22 hours ago 
Hi you. There is a lot of great advice in the tread you made about game development. We are a small studio in DK and I wanted to let you know that we are always looking for ideas and inputs and even testers. Testing other work is a great way to learn about the iteration of gameplay. So feel free to drop me a line with your "not throwaway" account along with ideas/ questions and if you would want to be one of our testers
permalinkembed
[–]CerebusGortok 1 point 21 hours ago 
Develop a growth mindset. Do not define yourself buy what you can and cannot do but instead look at it as things you have learned something about and things you haven't learned about yet.
People grow in skill in things they spend time and energy actively learning, and generally that is things they are interested in. If you are interested in art and design, focus on getting better while you develop games.
When working on a platformer, try to develop your design skills by thinking about different ways you could do things and then evaluating them in terms of how they will affect the player. Always do things with a reason, theory or hypothesis and try to evaluate whether it was successful or not. This well help you learn the skills to make games better.
I'll give you an example with the platforming game. Start with a jump height and pattern. Work on it until it feels responsive and fun. If it doesn't, figure out or guess why and see if you can fix it. Do that repeatedly until you get it feeling good. Next work on establishing some guidelines for how to space platforms. If your guy can jump 5 meters, for example, you might want to set a standard width of 4 meters so that it is obvious when you can make a jump or not. Then jumps that can't be made might be 6 meters, but the 4-6 meter range is off limits, because that would confuse the player. Try it out and pretend like you are a new player. See if those ranges of jumps feel good.
permalinkembed
[–]Japanletsplay 1 point 21 hours ago 
If you want partners for your hobby project try /r/INAT . I had the same problems like you too, and just throw my Metroidvania-idea in the garbadge to start working on a sport-team-manager-game there I need way less graphics (the are enough free Assets in the internet) and no fancy level design, just gamemechanics.
permalinkembed
[–]valkyriavwww.firefungames.com 1 point 21 hours ago 
That's ok! Nobody is good at everything. You could learn or team with others, but there are other options I don't see many people here mentioning.
Make use of your strengths! So you're good at programming? Making systems? Do that! Games don't need to be art-heavy or have level design to be fun!
Look at games like Dwarf Fortress, Factorio etc. Sure, they also need some design. What is it worth adding to the system to make it more interesting and what is just frustrating? All those values need to be tweaked. But as a programmer, there's much more room for trial and error there, setting values based on analytics and feedback, as opposed to making a level-based game, like a platformer, where it's either well designed to a large degree from the start or not.
If you don't like those kind of games, what about procedural content generation algorithms? There are lots of algorithms that create playable levels and "learn" to make better ones. Will they be as good as hand-made ones? Probably not, but that doesn't mean the game will suck. You can put all the extra energy in adding more features and improving the algorithm!
Regardless, imho, what's most important is to have fun with it, both while making it, and while playing it afterwards.
permalinkembed
[–]JoeKnome 1 point 21 hours ago 
There are lots of great responses here already. The most direct answer is that you are young and can learn more about the things you are finding difficult. Take it in smaller steps and work up to the type of stuff you want to make. As u/speedtouch has, I would recommend Sequelitis and Extra Credits, as well as Game Soup and Mark Brown. They all have good videos analyzing games and their design. If you'd like something more in depth on game design, I can recommend the books The Art of Game Design by Jesse Schell and Game Design Workshop by Tracy Fullerton. There is an article on Game From Scratch about the various methods of getting art into your game as a programmer. Also keep an eye out for courses on Udemy, as there are some really good ones that often go on sale. The info is out there, and you're starting young. Just understand that it will take time to get the skills and start to make the games you're envisioning. Start off with an idea, as you have, then before diving into the code, plan it out for yourself. Ask what objects, mechanics, and art will need to be made for the game, and what the player will do and experience. Consider all the aspects, and plot it out beforehand, utilizing the knowledge and techniques from the sources above. Give yourself small and specific tasks, in order of importance, and your projects will become much more directed.
permalinkembed
[–]clockworkmonster 1 point 20 hours ago 
Just make fast, short, small games and finish them. Improve your skills and learn in the proccess.
permalinkembed
[–]Kodamik 1 point 20 hours ago 
Use your ignorance to your advantage! The Industry is full of experienced GameDevs who can make a good game out of practically any concept. However, producing a game with proven methods mostly results in unexceptional products. Your inexperience can actually help you come up with fresh concepts! Just watch Peter Molyneux on Youtube how he did Populous.
Find out what you can do, and make a Game that suits your ability. You saw that your Art and GameDev isn´t good enough to fulfill your vision of a moody horror game? That´s ok. Just keep it in the back of your head, maybe someday you come up with a mechanic for the camera.
In the mean time you can either finish up your platformer and show it to people or play games that work with similar mechanics, like Fatal Frame or Slenderman. Maybe you´ll come up with a mechanic for your Horror game, maybe you´ll find out how to make your Platformer levels more enticing or maybe you´ll find new game concept.
You don´t need to be an Artist, There´s enough free Art. You don´t need much level design for competitive Multiplayer or (arguably) Roguelike-likes. Just make stuff you can do, and playtest that until you come to an ability-multiplier.
It´s possible to learn Game Design, Level Design, Graphic Design, Programming, Sound Design, Animation, Marketing and make a game on your own. However, that´s a lot of effort. Maybe you can find that magical idea, something which doesn´t need all those production values to work. An idea that suits you personally to make an awesome unique game cheaply.
If you don´t, find other lonely inexperienced GameDevs online around the globe to help with your project, or join theirs.
permalinkembed
[–]Koalacards@KoalaKodes 1 point 20 hours ago 
I am 17 years old (was 16 just a few days ago), and I understand your issue of having peers without the dedication that you have because I have the same problem too. I am alone, just me and a unity program open.
What I would suggest to do is do a small project, like really small. Maybe something you can do in 2-4 weeks. Make the game have one or two mechanics and then call it a game. For example, my first game was made in 10 days and it was a few box sprites and a background sprite with one mechanic for the gameplay and one mechanic for an in game store. Thats it. After you finish the game, but it out there and be proud of it. Sure the game probably isnt worth spending hours on, but that doesnt mean that you cant still be proud of it. Tell your friends to play the game or publish it somewhere(my game was designed for mobile so I put it up on the Google Play store) if you can. 99% of the time you wont get popular off of your first game (my game on the Play store has 15 installs), but still consider it a success because you made a game.
My second piece of advice is most useful once you have made a super small first game and you are looking for a second project. Make goals for yourself, and have weekly/biweekly updates on your progress. For me, I am working on my second game now and have been for a few weeks but I dont feel alone or get tired of the game because I get good feedback every week. By posting my work for the past week on twitter and reddit, I can see how close I got to my goal for the week and I always know what to do next. If you start a long project, i would highly advise to make a social media page or a blog site in which you can show progress on your game, and this is how you can get some sort of fanbase.
Good luck! Game development only gets more fun after the first few steps.
permalinkembed
[–]kryptomicron 1 point 17 hours ago 
Read Designing Games by the creator of RimWorld. If you can't afford to buy it, check your library; mine has the eBook.
permalinkembed
[–]shinyquagsire23 1 point 17 hours ago 
Suppose I'll throw in my story, I've done programming since ~12 years old, 19 now and between there I've dabbled slightly in game design but I mostly do exploitation and kernel stuff now.
The projects I've enjoyed the most have been the ones which have a clear, defined goal. One night I decided I wanted to try doing card game logic with a Wii U app, so I wrote a Pazaak clone. Borrowed some assets because I wasn't selling it, it was mostly a proof of concept. Also took someone else's game and ported it across languages, not exactly game design but it was super cool seeing a PC game run somewhere else. As far as larger game projects go, [DesktopAdventures](github.com/shinyquagsire23/DesktopAdventures) is my hardest one but I'm still not finished with it, my motivation comes and goes and it's a pain, but it's nice because I get to work on only the engine, but it takes reverse engineering work to figure out how the original game worked.
My personal advice I suppose is just pick projects which are really straightforward and allow you to maximize what you enjoy the most. I wasn't really good at art, animation, or music for a long time, so I found projects which involved a lot more programming, because that's what I found out I really liked the most. If you want to do art, it's totally possible to learn given the right tools. I found that I'm actually pretty decent at vector art in Illustrator, just had to find the blob brush and warp tool and a touch screen. Went from this to this and this within two months of practice so definitely not impossible, though I think what I realized was that sinking 6-16 hours into a drawing was normal and needed for anything good. Studying anatomy and porportions helped but I suppose the usefulness of that depends on what you're going for.
It's probably been mentioned, but working out the gameplay of a game and just using graphics from Asset Jesus (Kenny) is probably an OK bet. Also along those lines I guess (rereading through things after mentioning Asset Jesus since his stuff is mostly 2D), it sounds like you're doing a 3D game? Game logic there can be tricky, sometimes it can be nice to take a break and do something 2D. Just don't be afraid to sink some serious time into polishing out a game idea before actually diving in and going for it. Also, talk to people who are doing the same thing, I've been hanging around artists because I wanted to improve my art, I've gotten some good advice and watching live streams has helped me observe what tools work best for people. Game jams generally have some nice streams where you can watch someone make a game really quick.
permalinkembed
[–]ToyJamie 1 point 17 hours ago* 
Hey, I'm also 15 and suck at all these things as well! I suggest buying some online courses from Udemy. There is some great game dev courses. That's how I plan on doing it sometime in the future.
permalinkembed
[–]snarfy 1 point 17 hours ago 
Nintendo - Putting play first. It's all about the gameplay. Super Mario Brothers was about one mechanic - jumping. They could have called it the jumping game. Everything else in the game was designed around jumping.
so I need platforms!" I throw random platforms into the map
In SMB, every platform had a purpose related to jumping. What is your game about? Jumping?
I suck at art (modeling, graphic design, UI design, animations, concept art
Try rendering rectangles instead of graphics. It lets you focus on the game and gameplay.
permalinkembed
[–]cgamonitor 1 point 17 hours ago 
"This is really a mess, uhh... you know what, it's good enough."
You gotta get out of that mindset, this isn't homework where the goal is to be done. The goal is to create something cool.
permalinkembed
[–]thygrrr 1 point 16 hours ago 
There's this game, which is entirely procedural, has graphics that are so shitty that it has become a global fad to copy them, but an engine that can render it reasonably fast. It was recently sold for over two billion, and was originally made by one coder.
What's it called? Minecraft.
Don't let your shitty art limit your imagination.
permalinkembed
[–]Mylon 1 point 16 hours ago 
Given the type of game you wish to make, it sounds like your strength is writing. Not all writing is just words, but includes framing scenes to bring ideas to life. You should look into narrative focused games. You can go from visual novels (minimal programming necessary), text adventure games (more programming intensive, less art intensive), or more artsy games like uh... Whatever that Playstation game was where you hurt ghosts by taking pictures of them.
permalinkembed
[–]narwhale111 1 point 16 hours ago 
I'm 16 and am in a very similar situation. I have been working on side projects for the last couple of years with my brother. I am primarily interested in programming but over the years I have taught myself how to use Blender, which has been pretty rewarding but 3D modelling is pretty hard to do well and I just want to finish a project in get to the coding. I have been recently teaching myself to do pixel art, since it is relatively quick to do with a certain level of quality.
I guess I am saying that you just need to teach yourself some art. It can take some time to learn but if you are alone in this, it is really the only way unless you can afford to hire someone (or get they agree to split profits). I reccomend learning pixel art or low poly 3D modelling if you just need to get decent, relatively quick/easy to make assets.
permalinkembed
[–]jazzgnat 1 point 16 hours ago 
I only skimmed this post so this may be repeated but I suggest going to some game jams. A lot of very creative games come from game jams and they will allow you to meet people who have the skills you don't. If you make something cool you guys can just continue. It is great way to meet people. Also go to college and study game development. You may also try /r/INAT but that is probably a long shot.
permalinkembed
[–]lejuggmikrueger.de 1 point 16 hours ago 
learn all these things?
permalinkembed
[–]Chocolatier_Games 1 point 16 hours ago 
If you would like I can point you to a game developers discord I have where people like artists and level designers can help
permalinkembed
[–]ryandlf 1 point 16 hours ago* 
You just need more practice. You suck at art right now because you don't invest any time in it because in your mind you've already decided you aren't good at it.
I watched a talk on this topic a little while back. About how some people seem to be born artists. Turns out that isn't true its just that "born artists" happened to doodle when they were children and have been practicing art for their entire lives. So ya as adults with decades of practice they appear like its a natural born talent.
Study your favorite games. Look at the levels. Deconstruct what they are doing. Hell just take a game and clone it. Just don't release that to the public and claim it as your own. Everything you need is out there on the internet just waiting for you to learn it. If you are truly interested in learning how to do art then just start doing it. When is the last time you opened up photoshop or gimp or inkscape and just made something for your game?
When I was 15 I made absolute crap. I still make absolute crap but you know what...i've got almost 20 years of practice and im pretty happy with how its coming along. One piece of advice that took me almost a decade to learn was that you have to understand how things work...not just how to do them. When you are watching tutorials...learn why using that tool in your 3D software does what it does. Think about what else could I do with this tool. Learn how a texture is applied to your mesh and what happens if you move your UV maps around. Fundamentals my friend. I'm rooting for you. Don't get too down on yourself. You already have motivation and hopefully you get a little more determination because you have the skills. You just don't know it yet.
permalinkembed
[–]bademeistAr 1 point 15 hours ago 
As long as you don't plan to release your games commerically it is completely fine to use stock assets etc. for your own "private" games (commonly refered to as "coder art") when it comes to Level Design there are various good sources of knowledge available online for free (from level design deepdives on gamasutra or GDC talks on youtube). Also if you work in an established engine like unity or unreal don't hang up much on visuals just whitebox. Use squares to space out your levels (which is one of the first parts of level design anyway) to see if your ideas work and get a feel for a level). I don't know if they're still active but a couple of years ago I got good and valuable feedback as well as a good source of knowledge in the http://worldofleveldesign.com/ forums. Don't be afraid to post your work there. They have tons of talented people who give direct but fair feedback which will help you get better.
permalinkembed
[–]Boo89100 1 point 15 hours ago 
As far as design goes I would recommend creating a GDD, game design document. You can look up some good examples from huge companies on games you probably know but basically it's the end all of collecting your ideas and addressing them. It's a ton of writing and because this is a personal project I would say you don't need to go all in, but use it as a resource to help collect your thoughts!
permalinkembed
[–]heavyfishheavy@onihunters 1 point 14 hours ago* 
I'm 32 now. I wish I was in your position, with 15 years, enough free time, all knowledge available in internet for free. Even then, with my age, I was able to learn enough to make games alone, I can make art, music, animations, coding, marketing, you name it.
You have the chance to become an expert at any area you want, be one of the best indie devs around etc.
Just understand that to be good at anything you need lots of time. To make any kind of interesting game you'll need time. Can be months, years or decades.
Just never quit, and try to learn now a bit of everything, programming, art, music etc. Dont say "I suck at X", instead say "I'm still learning X".
About planning games and levels, well, you should start by analyising the levels from your favorite games. Play through them tons of times, take a paper and draw maps of the levels!
For games try to make a list of all their components.
How many menus they have?
What features they have?
Add any other questions you can think of, make it a list, then try to replicate that list for your game.
permalinkembed
[–]TheBobbyDude 1 point 14 hours ago 
You could combine the two concepts:
Make it a platformer in suicide forest. The platforming aspect being climbing trees and jumping around mountain cliffs, rivers, crazy hikes in order to get key photographs. With each photograph you unlock new info about who the monster is. Towards the end of the game the monster becomes more prevalent and you have to stay in the tree tops and avoid the ground because that is where the monster travels. Imagine Zelda breath of the wild type of platforming.
Start out by making your game focus on three missions aka three photographs. Each photograph will require a little more skill to get to. So each mission will require a specific skill/challenge.
This is where level design and skills go hand in hand. Focus on a particular skill you want the player to master and focus your level design around it.
So example: you want the player to master wall jumping. Make a level where the player has to consistently bounce off trees that are close together in order to reach the top of a single tree and get the photograph they need. Have a set end point on top of a tree where the photo is required.
Using a specific skill and challenge you want the player to learn gives you focus and the purpose for level design.
As the tree get higher they get skinner and harder to bounce off of. Use little nuances like that to add difficulty and variety. Maybe their are bee hives or wasp nests that you have to avoid or hanging dead bodies. Whatever, it's up to you.
As far as graphics go download blender and start learning Low poly right away. It will be hard and frustrating for the first month but anybody can work hard enough to design a low poly level.
Get on Pinterest and search low poly and see what styles interest you the most. Learn from them and copy them in order to practice. Your own style will come out as you try to copy.
In the end you will at least have a great prototype even if you don't like low poly and will have something very concrete to show a 3D modeler what you have in mind who can then work with you to make the final version of the level, if you are unsatisfied with your own style.
Use your limitations as your design principles. Come up with a skill or tool for the player and design your level around it.
The second level could be lassoing from trees and swinging like Indiana jones from tree to tree and the third level could be sneaking around hiding from the monster.
permalinkembed
[–]jmarchuk 1 point 13 hours ago 
Learn stuff. That's it. Nobody knows what they're doing when they start off and everyone sucks at everything they haven't studied. Wanna learn art? Ask artists, read about visual art theory, practice drawing/painting/digital editing, watch speedpaints.
permalinkembed
[–]RaffBluffin 1 point 13 hours ago 
Stop taking game programming courses and take game design courses.
permalinkembed
[–]thomar 1 point 13 hours ago 
Start small, learn to get better. Make a few one-screen games as proofs of concept. Check out this list: http://inventwithpython.com/blog/2012/02/20/i-need-practice-programming-49-ideas-for-game-clones-to-code/
permalinkembed
[–]onewayout 1 point 13 hours ago 
One of the best things to realize can be summed up by this spot-on quote from Adventure Time:
Sucking at something is the first step to becoming sorta good at something.
You are going through the exact same process that everyone goes through. You start out sucking, and by doing it, you get better. The more you do it, the better you get, as long as you're stretching yourself, paying attention, and trying to improve.
The fact that you are even aware that "just throwing things into the level" makes suboptimal levels, and that you really should have a plan in mind and a purpose for how you place things in levels is an example of how you've already grown. You may not have a solid foundation yet of how to effectively plan out those levels, but you have managed to identify a shortcoming in your "game developer's toolbox", which is of course a fundamental requirement for advancing.
Indeed, that's what we're all doing, all the time. Looking for shortcomings in our toolboxes and improving them. Even seasoned veterans do this. If you don't do that in this industry, you're falling behind.
So don't worry. You're just starting on your journey. Don't fret that you're not at the end as soon as you start. Just keep working at it, and you will get better.
As for finding artists, one option is to hire someone. That takes money, so you may have to mow some lawns. Another option is to use some open game art; that would certainly be fine for learning. And finally, you can always make games that don't require much art, such as text based games.
permalinkembed
[–]Jasper_Ridge 1 point 12 hours ago 
I'd say you need to take a step back and write out what you want from the game and see if there are ways to make it happen eadily without aymore undue stress.
permalinkembed
[–]indominator 1 point 12 hours ago 
just do it. game is a part of design, and design is finding solutions to problems, the only thing you gotta do is find a way to make games with all your qualities and deficiencies. i have done that and trust me, its much easier to finish a game when you can prototype a game around certain concepts. many games feel like programmer games, or artists games, make it your game
permalinkembed
[–]tkdHayk 1 point 12 hours ago 
you are young enough that you should start learning blender.
permalinkembed
[–]hithisismythrowaway0[S] 1 point 11 hours ago 
I know Blender. I'm just not artistically skilled enough to make use of it - I get the technical side of it, but not the artistic side.
permalinkembedparent
[–]tkdHayk 1 point 5 hours ago 
keep it up. you got time. Art skills will be more valuable than programming skills in 10 years
permalinkembedparent
[–]fragileteeth 1 point 12 hours ago 
Most of your concerns are all things people learn through trial and error. Which is why game dev is such an experience reliant field: you have to make good games to know how to make good games. Most people aren't born with an innate knowledge of perfect level design. Most people start with an idea, start laying it out, then play it and say 'this is so fun it needs more x' or 'this is crap the major flaw is y'.
Your art doesn't have to be good. Games aren't fun because of good art (for the most part). Games are fun because there are fun mechanics, which as a designer and programmer you can refine and tweak on your own. If you hit the goldmine with fun gameplay, you will certainly be able to find artists ready to team up with you.
If you insist on working solo, I have a few suggestions:
Set your sights lower. As one guy, especially as one guy learning, you should focus on putting out several projects and learning a good breadth of things.
Learn to art even if it's really ugly. Art is almost always easy to replace.
Use an engine with a broad marketplace, either Unity or Gamemaker are my suggestions. You can probably get away with using only free or inexpensive assets for much of the stuff you feel uncomfortable with making yourself.
Introduce yourself to a hobby dev community. Start publishing builds. Show off screenshots and videos. Get feedback. Take the feedback to heart and learn from your mistakes.
permalinkembed
[–]Dolmax 1 point 12 hours ago 
Just a quick practical tip that I think can help your game design choices be more meaningful: write down on a piece of paper or a white board (something that you can display in your work space) the things that you want your player to feel, experience when they play your game. Things like fear, fun, sense of discovery, surprise, etc. And then every time you need to make a choice, look at that list and ask yourself if this choice moves your game closer to what is on your experience list.
permalinkembed
[–]D3qTV[🍰] 1 point 12 hours ago 
The best way to learn level/game design is to use examples from really good games and to be confident in your ability
permalinkembed
[–]Elennart 1 point 12 hours ago 
Doing game art doesn't just happen. There is a big learning curve to learn how to do art, then doing art using the software applications, and then adapting your work for the game.
permalinkembed
[–]TChan_Gaming 1 point 11 hours ago 
I'm still new to game development as well but here are some tips I learned: 1. Find mentors, cold call or cold email people. Game developers will help. 2. Start small. Create a small game and keep polishing it then repeat. 3. I can't imagine how you feel being 15 and having a hard time finding people to help with your weakness. I think the best thing to do is keep asking for help online like you are doing now. Maybe someone will take notice and offer to help. 4. I believe this is the most important which is to execute every single day. Always do something regardless of how small or big to push your game development. It will keep you motivated, passionate, and become even better. 5. You will feel demoralize at some point but realize it takes hard work to accomplish something. Don't keep procrastinating or lose hope. Seek help, ask questions, and problem solve.
permalinkembed
[–]Gryphron 1 point 11 hours ago 
Mark Brown of game maker's toolkit game just released a video on creating better Mario maker levels that really helped the Mario maker community.
permalinkembed
[–]OPisadumbassss 1 point 11 hours ago* 
Just keep trying. At your age the most important thing you can do is to work under an improvement mindset. Recognize that relative to others in your field of work, you are a young and up and coming player. You're still in your apprenticeship stage.
That apprenticeship means working under an improvement mindset. Understand that being bad at something does NOT mean you will remain bad at something. The most important thing is putting in consistent time towards conscious improvement. By the time you reach the age of most industry professionals, you'll have had a productive apprenticeship period where most people wait around, go to college, and eventually figure out their career. Really, at the age of 15 you can get a lot done. I'm only 26 and the level of energy you have as a teenager is insane. You can probably learn in beastmode compared to older devs.
So, make those first lame attempts at making stuff. Anyone who's ever been successful, was a failure first. Sucking at something is the only way you lay down the initial progress that lets you see how to improve
If you are interested in the psychology of skill acquisition and mastery, you should check out the books Mindset, Outliers, and Mastery.
permalinkembed
[–]RoseArkDraws 1 point 11 hours ago 
I can't offer a lot of advice that hasn't been offered already, though I'll second the recommendations for extra credits and GDC talks. But I can tell you that I was in a similar boat. I'm 17 now, and when I was 15 I kept trying and failing to make games, it's a process. You're off to a great start. I'm really just getting to that point myself. I'm working on a similar project right now and the most helpful thing for me has been to take the game to other people as often as possible getting continual feedback and figuring out what to do with it. I also suck at art but I've been getting better through practice. Another thing is to reach out to people and just see who's willing to take a chance.
I know how hard it can be to stay motivated or focused, if you'd like to keep in touch you can send me a PM. I'd love to stay updated on how you're doing and maybe we can work together on something!
permalinkembed
[–]confident_bruce 1 point 11 hours ago 
Play to your strengths. I don't like the time-sink of messing around with art too much, so I focus on what amazing visuals I can create purely with code.
permalinkembed
[–]akai_ferret 1 point 11 hours ago 
You're so young, take some drawing classes!
permalinkembed
[–]no1survivalist@cjgstudio 1 point 10 hours ago 
Find an artstyle you like, try your best to learn it. Art isnt natural, you look at things and throw a spin on it of your own. Takes practice, not born being good at art.
permalinkembed
[–]The_dude_that_does 1 point 10 hours ago 
Lots of good replies, and you're getting a bunch because you're asking a lot of good questions. I would like to talk about game design though and I'm going to use your aokigahara example. First I should point out that I am an ameteur but I love studying and thinking about game design, so take everything I say with a grain of salt. Also, on mobile so sorry for any formatting issues.
Game design is not what is in the game, its how the player interacts with your game. We could have what looks like a camera, but it can't take pictures. If it's thrown, it explodes! Is it still a camera? So as we continue, when I talk about something, it's about how things in the game interact. (camera can look like a stick but it functionally takes pictures/creates a flash, whatever)
There are two major ways to come up with a design: concept -> mechanics, or mechanics -> concept.
Mechanics #-> #Concept

You start off making a game, you know you want to make a platformer, but you have no idea what the story or setting is. Honestly, the there are plenty of games that are really fun with a bad or no concept.
"Thomas was alone" is a great platformer game that I will bet the designer wanted to make a puzzle platformer and made the concept wrap around the mechanics. Different A.I. are different characters/puzzle pieces so they needed a concept where there were multiple A.I.s. How did these A.I. Come into being? Tada, a concept.
Another example:
How does the player interact with the world? Jumping. What makes it a challenge? Different kinds of platforms.
What should we fight? Turtles? Why not. Main character, screw it, make them a plumber that eats mushrooms. All of a sudden you have maio.
Concept #-> #Mechanics

This is your Aokigahara game. You have a concept for the setting and characters, but don't know how it should play. This can be trickier but more fun way to design a game imo. You have to think of how you want to use the details of your concept to implement mechanics.
You want your game to be a horror game. Read/play/watch some horror stories and see if something sticks out like it might be a good mechanic. Always ask questions about why something is in the game and conceptually/mechanically used. I know that hanging is a common way of "suicide" in aokigahara, could there be a way that the users or the monster interacts with some they find? If the player finds a knife, can they fight back? Is fighting back effective or a futile effort?
For example: maybe you can only see the monster when looking through the viewfinder of your camera. If the monster is invible, and the player can fight back, can they use the camera and the weapon at the same time? Regardless of the monster being invisible maybe the flash stuns the monster for a short duration, depending on how close the monster is: 5 seconds if they're on top of the player and .1 second if they're 5m away. This also would greate a risk/reward system. Play with these ideas and see if you can't exand on them.
What is the goal? Get out of the forrest? Kill the monster? Simply survive? Feed others to the monster so that it doesn't eat the player? Befriend the forrest spirits before the player become concumed by a curse put on them by the monster that makes them commit suicide? Go wild.
permalinkembed
[–]stockefeller 1 point 9 hours ago 
Maybe consider buying some game art? GraphicRiver has some decent art for a first game...
https://graphicriver.net/search?utf8=%E2%9C%93&term=game+art&as=0&referrer=homepage
permalinkembed
[–]OhNoTokyo 1 point 9 hours ago 
Many people lack the skills that you currently lack. This is almost always remedied by bringing people into a project. My advice to you is simple:
Become excellent at one of those things, in this case, you'll want to probably try at being a superb games programmer. More to the point, you'll have to decide what sort of games appeal to you and what you like to play. Then find the frameworks, engines and libraries that allow you to do that, and excel at those.
Find other people. This can take two forms. You can either try and recruit, or you have the option of joining someone else's project. Remember #1? That's what you are bringing to the table. While I suspect that there may be more programmers than artists looking to make their own computer game, you can probably join an existing team. Yes, you are not making your own game, but what you are getting is experience, and you are making contacts in the game development scene. Your new teammates on someone else's project may well know people who can help you, or be willing to help you, if they like you and trust you.
Whether you recruit or join another team, if you want to then create your own games, you need to learn about project management, specifically game project management. Remember #2 where I told you to maybe join someone else's project? There is nothing like actually doing the work and seeing how someone else manages you, in order to figure out how to manage others. This is critical if you are 15. Without talking down to you, please realize that team leadership is a skill that people hone over years and years, and it helps if you can find someone who lead you, so you know what sort of leadership inspired you to complete your work. You also need to gain the experience to know what kinds of games exist, and the strategies that make them fun. Many people here have talked about specifics about how to make some games fun, but you want to at least have an understanding of how you get started. That's why #2 may help you more than anything else. An apprenticeship to someone who has more experience on an actual project is probably worth 100 YouTube videos.
permalinkembed
[–]Lycid 1 point 9 hours ago 
This is awesome, because I remember being exactly like you when I was 15 (I'm 27 now). I wanted to do art, game stuff, etc. I wanted to make cool things. I didn't know how! What is art even? How do artists make something original and cool? I wanted to create awesome games from cool ideas I had but had no idea how people ended up making stuff so good. Why can't I do that?
Keep asking these questions. For years and years and years. That's the secret. The reality, is there isn't an answer to this and even the best artists out there are constantly chasing those questions and trying to push themselves to match the "masters" they look up to. They just keep asking and exploring them, and over the years just get better at it.
Never stop observing and exploring. Ask why something is the way it is. Did you play through a level and really enjoy it? What made it fun? Why did that level in that game you just played suck? Maybe you can try literally putting the fun part of a level you played into your own levels/games and see what happen. Does it work? Why not?
permalinkembed
[–]5ourpu55 1 point 9 hours ago 
You're 15, you don't suck at anything. You've very young, it's never too late to learn!
permalinkembed
[–]set_phasers_to_stun 1 point 9 hours ago 
Start frequenting gamasutra, there is a lot of great information there regarding design and technical aspects of game development. As far as everything else, outsource or practice to get better.
permalinkembed
[–]oldaccount29 1 point 8 hours ago 
Use an asset store. ou can get a lot of quality models/art from a store for free or cheap.
Here is an example of a very large group of assets that come together. It costs $140 so maybe out of your price range , but it is the most expensive pack that seller has, out of about 50.
https://www.youtube.com/watch?v=3xVWfoIQ7qg&ab_channel=syntystudios
Here is a list of the same seller's assets that cost under 10 dollars:
https://www.assetstore.unity3d.com/en/#!/search/page=1/sortby=popularity/query=publisher:5217&price:0-10
.
.
Here is a list of different asset stores:
Unity: https://www.assetstore.unity3d.com
Envato: http://market.envato.com/
https://gameartpartners.com/
https://blendermarket.com/
https://www.gamedevmarket.net
https://www.scirra.com/store/sell-assets
http://www.supergameasset.com/
Free:
http://opengameart.org/
http://kenney.nl/assets
permalinkembed
[–]deftware 1 point 8 hours ago 
A lot of any creative endeavor involves practice. You say you've been 'studying' but have you been actively practicing? How many of these jank platformer levels have you made? Almost everybody who's worth their salt has arrived at where they are by creating and then analyzing, over and over and over. Iteration is the key to success.
You can't just go from reading a bunch of articles to being an expert. Sure, some people have an innate sense for certain things, and I'm sure you have a gift just like everybody else and you just need to figure out what it is and how to apply it. For everything else you're going to have to learn like the rest of us through experimentation and trial-and-error.
EDIT: I forgot to mention the car-driving analogy. The smartest person on the planet could read all the text in the world concerning driving a manual transmission vehicle, and watch all the tutorial videos in the world, but once they actually get into the car and try to drive they'll still have to go through pretty much the same learning curve as everybody else. Learn by doing, that's my two cents.
permalinkembed
[–]jankyshanky 1 point 8 hours ago 
play it. do you like it? no? what don't you like about it? what's the opposite of that? do you like that? try somewhere in the middle. do you like that? borrow other peoples are. try different are styles. which one do you like the best? borrow 10 more variations on that style. pick one you like the best. work from that and try to make everything your own
permalinkembed
[–]nyrrrr 1 point 7 hours ago 
I just read the title, but: read the shit out of Scott Rogers 'Level Up'. As for art: just practice. No easy way
permalinkembed
[–]StarsInteractive 1 point 6 hours ago 
I used to be in the same boat you are. I'm 18 and still struggle with art for games. Some great resources for game design are:
Extra Credits
Extra Play
Mark Brown
Game Soup
Errant Signal
Game Developers Conference
Gamestudies.org
I personally recommend watching everything in extra credits game design playlist and all of Mark Brown. They give you a crash course in what it means to create a game.
For art, you have two choices: You can make friends with an artist, or design your games to work on minimal art.
There are plenty of engaging games that have minimalistic art styles, study why they work.
permalinkembed
[–]bsurmanskibsurmanski 1 point 1 day ago 
1) lots of hard work
2) plan everything. have a complete idea of what you want to make
3) stick to the plan
4) don't over engineer (stick to the plan!)
5) make friends, collaborate
permalinkembed
[–]CerebusGortok 2 points 19 hours ago 
I see some people have downvoted this and I wanted to provide insight as to why they might have done that.
Overplanning games may lead to creating something flawed and then sticking with it to the point it is unsalvageable. A more modern approach is to create high level concepts, and then spike out attempts within that space to see if you can find things that are fun and interesting. You may iterate on your grand design multiple times as you find out your game is not what you thought. There is a point at which you have to start making broad final decisions and limiting your scope, but trying to define it too early is detrimental to making something that is actually good. Even the best designers rarely get it right with the first stab.
permalinkembedparent
[–]ThalmorInquisitorWHY DOES YOUR GRAVITY NOT WORK? AAAGH! 1 point 15 hours ago 
It amazes me how much game dev is like storywriting sometimes.
I frequently have a fun idea for a story, write the first chapter in one go, only to abandon it because the story isn't as I thought when actualised. A good necromancer in a superhero universe stops being about satirising comic books and becomes a story about treating PTSD victims in a global shadow war. A story about a starship captain who got court martialled ends up being a romance story because the intro had great chemistry with those two.
Never be afraid to save your work and start anew later if it sucks for now. Sometimes you need distance to make a work art
permalinkembedparent
[–]bsurmanskibsurmanski 1 point 10 hours ago 
ah, okay, thanks. Perhaps 'stick to the plan' sounded too concrete, I tried to make it simple.
new rule: stick to the plan, but the plan is flexible.
Never go full 'waterfall'. But even 'agile' projects should have a plan.
permalinkembedparent
[–]Novantix 0 points 15 hours ago 
I just turned 16, i have been doing game development since i was 8.
Currently i am going through a computer science degree.
I am pretty good at art and programming. I would love to work with your game on the side?
I have put way more hours than you I can guarantee lol.
permalinkembed
[–]DrDread74 0 points 14 hours ago 
You studied game design for 3 years and have no idea what you are doing? What have you been doing?! =)
I've been hosting and making my own games since I was your and im 40+ now so let me throw a few general "level design" flow ideas that kind of apply to any game you make.
Start your levels dead simple with lots of rewards and no other complicated mechanics. Stick to one basic mechanic. As you go to the next level you introduce new kinds of mechanics and new objects to interact with one at a time, each level you introduce a new "thing" or concept and revolve the level design around that thing. Eventually you start adding those things together in the same level, different parts of it or all mixed in. And then it goes to harder versions of all of that.
Making a platformer? Ok. Your first level, the ledges are very simple and straight forward. Long platforms, close together, easy to jump to, lots of coins. Absolutely no other mechanics present (Bouncing off walls, jump packs or whatever else you have planned) A five your old or your mom can do it. You're teaching your player "jumping"
The next level. Make the jumping ledges a little more dangerous, thinner, longer distance away from eachother which makes the "jumping" have to be better timed. Still easy but your cat would have trouble with it.
The 3rd level you add something new, Extra Bouncy Jump pads that make you jump higher. Have one at the beggining which is used very easily to get to another ledge. then the rest of the level has several of them in slightly harder configurations.
The 4th level you add something else, "wet patches" of slippery floors that make your toon slide. Start with a very simple no other distractions screen that just has a slippery floor that they have to walk across o get to a simple ledge. The rest of the level has a few of these mixed in increasingly annoying positions.
level 5. Now you add gun turrets, or Walking turtles that kill you or whatever. etc....
Your goal is to "teach" the player how to play while hes playing it, then halfway throug the game everything is introduces and the levels just get more difficult and complicated with creative use of those mechanics. If you're doing "coins" half of them are along the way and some of them are off to the side requiring a more difficult jumping situation. Also find a way to make "progression" tangible. Perhaps allowing the player to pick up a wingsuit where they can now "coast" sideways from a jump and the levels incorproate that. Maybe he finds a gun atth ened of leel 3 and now can shoot things with very limited shots replensished by coins or wahatever. Its more fun if you add mechanics to the game that seem like you're leveling up your character in some way.
By the time you're on level 29 you've got a wing cape, double-jump boots a rifle and a short range teleporter with a cooldown going through a complicated and very animated level
permalinkembed
[–]pickAside-startAwar -1 points 21 hours ago 
Time to unsubscribe.
permalinkembed
[–]HATA111what's a twitter? -1 points 20 hours ago 
Stop sucking at these things.